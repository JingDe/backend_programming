
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log  logs/error.log debug;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
#    include       mime.types;
#    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    
    log_format  norah  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" ischrome:$is_chrome "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    access_log  logs/access.log  norah;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #mytest;
        #myhelloworld;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            
            root   html;
            index  index.html index.htm;
        }

        location /mytest {
            
            mytest;

            root   html;
            index  index.html index.htm;
        }

        location /myhelloworld {
            
            myhelloworld;

            root   html;
            index  index.html index.htm;
        }

        location /mydownload {
            
            mydownloadfile;

            root   html;
            index  index.html index.htm;
        }

        location /myreadbody {
            
            myreadbody;

            root   html;
            index  index.html index.htm;
        }

        location /myfilter {
            default_type text/plain;

            add_prefix on; 

            root   html;
            index  index.html index.htm;
        }

        location /myupstream{
            myupstream;

            root html;
            index  index.html index.htm;
        }

        location /list{
            proxy_pass http://hq.sinajs.cn;

            proxy_set_header Accept-Encoding "";

        }

        location /mysubrequest{
            mysubrequest;
        }

        location /myvariable1 {
            root html;
#            myallow $http_testHeader xxx;
            myallow $remote_addr 192.168.55.200;            
            index  index.html index.htm;
        }
        location /myvariable2 {
            root html;
            
        }
        location /myvariable3 {
            root html;
            myallow $remote_addr 192.168.55.200;
        }
        location /myallownew {
            myallownew $is_chrome 1;
            root html;
            index  index.html index.htm;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
